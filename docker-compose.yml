version: "3.7"
services:
    server:
      build:
          context: ./
          dockerfile: Dockerfile
      image: airline
      container_name: airline_backend
      restart: always
      networks:
        - server
      ports:
        - 3000:3000
      environment:
        DATABASE_URI: ${DATABASE_URI}
      depends_on:
        mongo:
          condition: service_healthy

    mongo:
        image: mongo
        restart: always
        ports:
          - 27017:27017
        networks:
          - server
        environment:
          MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
          MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
          MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
        healthcheck:
          test: echo 'db.runCommand("ping").ok'
          interval: 10s
          timeout: 10s
          retries: 10
        volumes:
          - mongo_store:/data/db

    mongo-express:
      image: mongo-express
      restart: always
      networks:
        - server
      environment:
        ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
        ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
        ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
        ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
        ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
        ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL}
      depends_on:
        - mongo
      ports:
        - 8081:8081
      volumes:
        - mongo_express_data:/data/db

networks:
  server:
    name: server
    driver: bridge

volumes:
  mongo_store:
  mongo_express_data:
